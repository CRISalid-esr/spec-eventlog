<pre class='metadata'>
Title: Journal des événements du cycle de vie de l'artefact
Shortname: eventlog
Level : 1
Status : LS
URL : https://mellonscholarlycommunication.github.io/spec-eventlog
Editor : Miel Vander Sande, [meemoo - Institut flamand pour les archives](https://meemoo.be), miel.vandersande@meemoo.be
Editor : Patrick Hochstenbach, [IDLab - Université de Gand](https://knows.idlab.ugent.be), patrick.hochstenbach@ugent.be
Editor : Ruben Dedecker, [IDLab - Université de Gand](https://knows.idlab.ugent.be), ruben.dedecker@ugent.be
Editor : Jeroen Werbrouck, [IDLab - Université de Gand](https://knows.idlab.ugent.be), Jeroen.Werbrouck@ugent.be
!Translation: David Reymond [IMSIC - Université de Toulon](http://www.univ-tln.fr), david.reymond@univ-tln.fr

Abstract : Ce document spécifie les exigences pour mettre en œuvre et héberger un Journal des événements du cycle de vie de l'artefact.
Markup Shorthands: markdown yes
</pre>

Ensemble de documents {#set}
=======================

Ce document fait partie des spécifications produites par les projets **ResearcherPod** et **ErfgoedPod** :

1. [Aperçu](/spec-overview/)
2. [Orchestrator](/spec-orchestrator/) 
3. [Pod de données](/spec-datapod/)
4. [Langage de règles](/spec-rulelanguage/)
5. [Journal des événements du cycle de vie de l'artefact](/spec-eventlog/) (ce document)
6. [Notifications](/spec-notifications/)
7. [Collecteur](/spec-collector/)

Introduction {#intro}
=====================
Dans un réseau décentralisé,
un artefact peut être partagé entre des acteurs et traité par une multitude de services,
chacun ajoutant à la durée de vie de l'artefact.
Pour chaque artefact, une série d'événements de durée de vie est donc répartie sur le réseau.
Ce document présente le [=Artefact Lifecycle Event Log=],
un format de données et un protocole pour l'enregistrement et la découverte de ces événements,
afin de servir principalement les applications liées à la gouvernance du réseau.

Un [=Artefact Lifecycle Event Log=] est une ressource Web publique, centrée sur l'artefact, en ajout seul, qui expose une série d'événements de durée de vie.
Ces événements sont enregistrés à l'aide d'un vocabulaire de données encodé dans [[rdf11-concepts|RDF]] pour assurer une interopérabilité à l'échelle du réseau.
En pratique,
le [=Artefact Lifecycle Event Log=] sera souvent une implémentation de ressource [[LDP]] qui est nativement prise en charge par un [[solid-protocol#data-pod|Pod de données Solid]].
Il est important de noter, cependant, que, similaire à [[LDN]], un [=Artefact Lifecycle Event Log=] est une utilisation spécialisée de la plate-forme de données liées [[LDP]] et ne dépend pas d'une implémentation complète de LDP.
Il ne nécessite qu'un sous-ensemble minimal qui est facile à implémenter.

Ce document décrit

- un vocabulaire de données compatible avec [[prov-o|PROV-O]] et [[activitystreams-vocabulary|Activity Streams 2.0]] pour décrire les informations sur les événements et journaux de durée de vie;
- la définition de la ressource Web d'un [=Artefact Lifecycle Event Log=];
- des méthodes pour découvrir les [=Artefact Lifecycle Event Log=];
- le processus d'ajout et de récupération des informations d'=événement de durée de vie= dans le journal.

# Conventions du document # {#conventions}

Dans ce document, les préfixes d'espace de noms suivantes sont utilisés:<table>
<thead>
<tr>
	<th>Préfixe</th>
	<th>Espace de noms</th>
</tr>
</thead>
<tbody>
<tr>
	<td>as</td>
	<td>https://www.w3.org/ns/activitystreams#</td>
</tr>
<tr>
	<td>daen</td>
	<td>http://www.w3.org/ns/solid/daen#</td>
</tr>
<tr>
	<td>ldp</td>
	<td>http://www.w3.org/ns/ldp#</td>
</tr>
<tr>
	<td>prov</td>
	<td>http://www.w3.org/ns/prov#</td>
</tr>
<tr>
	<td>dcat</td>
	<td>http://www.w3.org/ns/dcat#</td>
</tr>
<tr>
	<td>ldes</td>
	<td>https://w3id.org/ldes#</td>
</tr>
<tr>
	<td>st</td>
	<td>http://www.w3.org/ns/st#</td>
</tr>
<tr>
	<td>acl</td>
	<td>http://www.w3.org/ns/auth/acl#</td>
</tr>
<tr>
	<td>hydra</td>
	<td>http://www.w3.org/ns/hydra/core#</td>
</tr>
</tbody>
</table>

Applications du Journal d'événements du cycle de vie de l'artefact
================================================

Un [=Réseau d'échange décentralisé d'artefacts=] peut soutenir les communautés dans l'échange d'artefacts numériques et de services sans avoir besoin d'une autorité centrale.
Les données sur ces échanges sont donc distribuées sur chaque acteur du réseau.
Cela intensifie le contrôle d'un acteur sur ses données et réduit considérablement la duplication des données,
mais rend également plus difficile d'obtenir une image claire de l'historique d'un artefact.
Il n'y a plus d'autorité de confiance unique qui enregistre et certifie qui a appliqué quels services à un artefact et quand.
Dans un [=Réseau d'échange décentralisé d'artefacts=],
cette information doit être collectée auprès de différents acteurs ayant des niveaux de confiance variables.
Le [=Artefact Lifecycle Event Log=] fournit les bases essentielles pour publier les cycles de vie des artefacts et ainsi soutenir ce processus de collecte.En bref,
un [=Artefact Lifecycle Event Log=] enregistre les événements du cycle de vie que l'instance du [=Réseau d'Échange d'Artéfacts Décentralisé=] souhaite voir publiés.
Cela est déterminé par la nature du réseau, les cas d'utilisation qu'il prend en charge et la manière dont les informations sur le cycle de vie sont utilisées.
Typiquement, une instance de réseau requiert que ces événements soient de notoriété publique pour garantir son bon fonctionnement.
Par exemple, un réseau alimentaire pourrait souhaiter la publication d'un processus d'inspection sanitaire terminé.
Il est donc présumé que la fraction dominante des acteurs participants éprouvera suffisamment d'incitation à héberger un [=Réseau d'Échange d'Artéfacts Décentralisé=] disponible pour tous les acteurs du réseau ; et enregistrer précisément les événements du cycle de vie sélectionnés.
Cette approche pragmatique est nécessaire car aucune conception décentralisée ne peut contraindre les acteurs à se conformer, tout en restant vraiment évolutive.

Ce document propose un modèle de données sémantiques minimal pour construire et publier des événements du cycle de vie de l'artefact, qui sert de base pour l'interopérabilité technique,
Il est attendu qu'une communauté qui utilise une instance d'un [=Réseau d'Échange d'Artéfacts Décentralisé=] étende ce modèle avec des types d'événements spécifiques au domaine qui fournissent plus de sens et de compréhension au sein de l'instance du réseau.
Une communauté peut également exploiter les informations sur le cycle de vie comme bon lui semble, ce qui donne lieu à une ou plusieurs applications des [=Artefact Lifecycle Event Log=].
Quelques applications probables sont présentées ci-dessous :

## Établir la confiance dans l'intégrité d'un artefact

Dans certains domaines, la valeur d'un artefact dépend de son cycle de vie reconstitué et de la confiance accordée à ce cycle de vie. Par exemple, dans la communication savante, une publication acquiert un statut après avoir été certifiée par un service de certification (par exemple, par un processus d'évaluation par les pairs). Un tel événement de cycle de vie devrait être enregistré dans les [=Artefact Lifecycle Event Log=] des deux parties. Lors de la reconstitution du cycle de vie de l'artefact pour évaluer son intégrité, le fait de rencontrer de tels événements à plusieurs endroits augmente la confiance.

## Découverte d'entités sur le réseau

Un processus qui collecte des informations décentralisées a besoin d'un moyen de naviguer dans le réseau et de découvrir de nouveaux artefacts. Étant donné la taille potentielle du réseau, de nombreux pods de données sont encore inconnus lorsque ce processus démarre. La découverte de pods inconnus repose sur les liens existants entre les acteurs et les artefacts. Par conséquent, un [=Artefact Lifecycle Event Log=] peut être utilisé pour trouver ces liens et servir de mécanisme de routage. Par exemple, dans un réseau du patrimoine numérique, un portail souhaite découvrir des données pertinentes stockées dans des pods contrôlés par des institutions du patrimoine culturel. Ne connaissant pas l'emplacement de ces pods à l'avance, le portail pourrait consulter d'abord le journal d'événements d'un hub de service de registre pour trouver des liens vers tous les ensembles de données qui y ont été enregistrés.

Vue d'ensemble {#overview}
=================================
Un [=Artefact Lifecycle Event Log=] est une ressource Web accessible par tous les acteurs à l'intérieur d'un seul réseau. Lorsqu'il est demandé, il renvoie une liste ordonnée de descriptions d'événements notables du cycle de vie, contenant chacune le quoi, le qui et le quand de l'événement. Un acteur peut stocker de nouvelles descriptions en mettant à jour cette ressource. Le journal maintient un ordre chronologique; de nouveaux événements sont ajoutés à la fin du journal. Par conséquent, il DOIT prendre en charge les producteurs ajoutant des événements tels que décrit dans [[#producing]]. Il PEUT également valider les [=Événements du cycle de vie=] avant leur ajout conformément à [[#validation]].Un [=Artefact Lifecycle Event Log=] DOIT être consommable par des acteurs autorisés dans le réseau conformément à [[#consuming]]. 
Son URL DOIT être découvrable par l'un des moyens décrits dans [[#discovery]]. 
Les acteurs du réseau PEUVENT être autorisés à lire, ajouter ou modifier les autorisations en fonction du mécanisme d'autorisation dans [[#authorization]]. 
Les événements du cycle de vie DOIVENT être décrits dans le vocabulaire de données du cycle de vie de l'artefact tel que défini dans [[#vocabulaire]]. 
Un [=Artefact Lifecycle Event Log=] DOIT être disponible dans le format [[json-ld11]], 
mais il PEUT également prendre en charge d'autres formats de données grâce à la négociation de contenu.

Bien que ce ne soit pas obligatoire, il est attendu que chaque acteur dans le réseau héberge un [=Artefact Lifecycle Event Log=] par artefact connu pour permettre une gouvernance efficace du réseau. 
Ainsi, un seul [=Artefact Lifecycle Event Log=] DOIT correspondre à au moins un [=artefact=] dans le réseau, 
tandis qu'un [=artefact=] PEUT correspondre à plusieurs [=Artefact Lifecycle Event Log=].

<figure>
	<img src="images/logs.png" width="100%" />
	<figcaption>
	Alice et Bob ont des pods de données contenant deux ressources : un artefact et un Journal des événements du cycle de vie de l'artefact. 
	Les hubs de services hébergent également une ressource Journal des événements du cycle de vie de l'artefact. 
	Comme le hub de service B certifie des artefacts, l'événement du cycle de vie selon lequel l'artefact A d'Alice a été certifié est consigné dans les journaux d'Alice et du hub de service B. 
	De plus, Bob a fait un commentaire sur l'Artéfact B d'Alice, donc les journaux des deux acteurs contiennent l'événement du cycle de vie selon lequel l'artefact A a été commenté par Bob.
	</figcaption>
</figure>

Vocabulaire {#vocabulaire}
=================================

Un [=Artefact Lifecycle Event Log=] est décrit à l'aide d'un vocabulaire de données minimal, introduisant un certain nombre de types sémantiques de haut niveau et de propriétés.
Le <dfn>Vocabulaire des événements du cycle de vie d'artefact</dfn> peut être utilisé pour construire une représentation [[rdf-primer|RDF 1.1]] du journal et des événements du cycle de vie qu'il contient.
Le vocabulaire de données est entièrement compatible avec [[prov-o|PROV-O]] et les types d'objets provenant de [[activitystreams-vocabulary|Activity Streams 2.0]].
Une vue d'ensemble est donnée dans la figure ci-dessous.

<figure>
	<img src="images/classes.svg" width="100%" />
	<figcaption>
	Un diagramme du Vocabulaire des événements du cycle de vie d'artefact
	</figcaption>
</figure>

Les exemples dans le document utilisent un [contexte JSON-LD conforme prédéfini](examples/context.jsonld) conforme au [=Vocabulaire des événements du cycle de vie d'artefact=].

Problème : ajouter une explication de haut niveau


## Types

Le tableau suivant répertorie les types du [=Vocabulaire des événements du cycle de vie d'artefact=].
Ces types sémantiques distinguent les différentes ressources et acteurs impliqués dans le cycle de vie d'un artefact. 

: Base URI:
:: `http://www.w3.org/ns/solid/daen#`
: Préfixe préféré: 
:: `daen`
: Classes: 
:: <a href="#type-artefact">daen:Artefact</a> | <a href="#type-lifecycle-event">daen:LifecycleEvent</a> | <a href="#type-lifecycle-event-log">daen:ArtefactLifecycleEventLog</a> | <a href="#type-maintainer">daen:Maintainer</a> | <a href="#type-service-hub">daen:ServiceHub</a>

### Type: <a href="http://www.w3.org/ns/solid/daen#Artefact">daen:Artefact</a> ### {#type-artefact}

**URI:** http://www.w3.org/ns/solid/daen#Artefact

Une ressource Web et un [[spec-overview#artefact|artefact]] qui est l'objet d'interaction entre des [=acteurs=] et conserve un cycle de vie au sein du réseau.

**Exemple:**

<pre class=include-code>
path: examples/Artefact.jsonld
highlight: json
show: 
</pre>: Sous-classe de :
:: <a href="https://www.w3.org/ns/activitystreams#Object">as:Object</a>, <a href="https://www.w3.org/TR/prov-o/#Entity">prov:Entity</a>
: Propriétés :
:: <a href="">daen:eventLog</a> 


### Type : <a href="http://www.w3.org/ns/solid/daen#LifecycleEvent">daen:LifecycleEvent</a> ### {#type-lifecycle-event}

**URI :** `http://www.w3.org/ns/solid/daen#LifecycleEvent`

Un [[spec-overview#artefact-lifecycle-event|Événement du cycle de vie de l'artefact]] qui a eu un impact sur le cycle de vie d'un certain [[spec-overview#artefact|Artefact]] et qui est utile au bon fonctionnement du réseau. Ils résultent souvent d'un [=acteur=] réalisant un service lié à cet [[spec-overview#artefact|Artefact]].

**Exemple :**

<pre class=include-code>
path: examples/LifecycleEvent.jsonld
highlight: json
show: 
</pre>

: Sous-classe de :
:: <a href="https://www.w3.org/TR/prov-o/#Activity">prov:Activity</a>
: Propriétés :
:: <a href="">daen:executor</a>, <a href="">daen:artefact</a>

### Type : <a href="http://www.w3.org/ns/solid/daen#ArtefactLifecycleEventLog">daen:ArtefactLifecycleEventLog</a> ### {#type-lifecycle-event-log}

**URI :** `http://www.w3.org/ns/solid/daen#ArtefactLifecycleEventLog`

Une ressource Web et un [[spec-overview#artefact-lifecycle-event-log|Journal d'événements du cycle de vie d'artefact]] qui expose une collection ordonnée de ressources d'[[spec-overview#artefact-lifecycle-event|Événements du cycle de vie d'artefact]] liés à certains [[spec-overview#artefact|Artefact]].

**Exemple :**

<pre class=include-code>
path: examples/ArtefactLifecycleEventLog.jsonld
highlight: json
show: 
</pre>

: Sous-classe de :
:: 
: Propriétés :
:: <a href="">daen:isEventLogOf</a>, <a href="">ldp:contains</a>, <a href="">daen:maintainer</a>

### Type : <a href="http://www.w3.org/ns/solid/daen#Maintainer">daen:Maintainer</a>	### {#type-maintainer}

**URI :** `http://www.w3.org/ns/solid/daen#Maintainer`Un [[spec-overview#actor|Acteur]], un [[spec-overview#maintainer|Gestionnaire]] et un [[spec-overview#human-agent|Agent Humain]] qui participe au réseau et génère des activités liées au cycle de vie d'un [[spec-overview#artefact|Artefact]].

**Exemple:**

<pre class=include-code>
path: examples/Maintainer.jsonld
highlight: json
show: 
</pre>

: Sous-classe de:
:: <a href="https://www.w3.org/TR/prov-o/#Agent">prov:Agent</a>, <a href="https://www.w3.org/ns/activitystreams#Person">as:Person</a>, <a href="https://www.w3.org/ns/activitystreams#Organization">as:Organization</a>
: Propriétés:
::

### Type: <a href="http://www.w3.org/ns/solid/daen#ServiceHub">daen:ServiceHub</a> ### {#type-service-hub}

**URI:** `http://www.w3.org/ns/solid/daen#ServiceHub`

Un [[spec-overview#actor|Acteur]] et un [[spec-overview#service-hub|Hub de Services]] qui fournit des services liés au cycle de vie d'un [[spec-overview#artefact|Artefact]].

**Exemple:**

<pre class=include-code>
path: examples/ServiceHub.jsonld
highlight: json
show: 
</pre>

: Sous-classe de:
:: <a href="https://www.w3.org/TR/prov-o/#Agent">prov:Agent</a>, <a href="https://www.w3.org/ns/activitystreams#Service">as:Service</a>, <a href="http://www.w3.org/ns/dcat#DataService">dcat:DataService</a>
: Propriétés:
::

## Propriétés

Le tableau suivant répertorie les propriétés du [=Vocabulaire des Événements du Cycle de Vie d'un Artefact=].
Ces propriétés décrivent la relation entre les différentes ressources et acteurs impliqués dans le cycle de vie d'un artefact.

<figure>
	<img src="images/model.svg" width="100%" />
	<figcaption>
	Un diagramme du Vocabulaire des Événements du Cycle de Vie d'un Artefact
	</figcaption>
</figure>: URI de base : 
:: `http://www.w3.org/ns/solid/daen#`
: Préfixe préféré : 
:: `daen`
: Propriétés : 
:: <a href="#property-eventlog">daen:eventLog</a> | <a href="#property-iseventlogof">daen:isEventLogOf</a> | <a href="#property-artefact">daen:artefact</a> | <a href="#property-maintainer">daen:maintainer</a> | <a href="#property-executor">daen:executor</a>
: Propriétés externes : 
:: <a href="#property-contains">ldp:contains</a>	| <a href="#property-generated">prov:generated</a> | <a href="#property-startedattime">prov:startedAtTime</a> | <a href="#property-endedattime">prov:endedAtTime</a> | <a href="#property-title">dct:title</a> | <a href="#property-signature">sec:signature</a> | <a href="#property-creator">sec:creator</a>

### Propriété : <a href="">daen:eventLog</a> ### {#property-eventlog}

**URI :** `http://www.w3.org/ns/solid/daen#eventLog`

Le [[spec-overview#artefact-lifecycle-event-log|Journal d'événements du cycle de vie de l'artefact]] qui représente le cycle de vie d'un [[spec-overview#artefact|Artefact]].

: Sous-propriété de :
:: 
: Dans le domaine :
:: <a href="">daen:Artefact</a>
: Dans la plage :
:: <a href="">daen:ArtefactLifecycleEventLog</a>



### Propriété : <a href="">daen:isEventLogOf</a> ### {#property-iseventlogof}

**URI :** `http://www.w3.org/ns/solid/daen#isEventLogOf`

L' [[spec-overview#artefact|Artefact]] dont le cycle de vie est représenté par le [[spec-overview#artefact-lifecycle-event-log|Journal d'événements du cycle de vie de l'artefact]] de celui-ci.

: Sous-propriété de :
:: 
: Dans le domaine :
:: <a href="">daen:ArtefactLifecycleEventLog</a>
: Dans la plage :
:: <a href="">daen:Artefact</a>

### Propriété : <a href="">daen:artefact</a> ### {#property-artefact}

**URI :** `http://www.w3.org/ns/solid/daen#artefact`

L'artefact dont le cycle de vie est lié à la [[spec-overview#lifecycle-event|Événement du cycle de vie]].

: Sous-propriété de :
:: <a href="https://www.w3.org/TR/prov-o/#used">prov:used</a>
: Dans le domaine :
:: <a href="">daen:LifecycleEvent</a>
: Dans la plage :
:: <a href="">daen:Artefact</a>### Propriété: <a href="">daen:maintainer</a> 


### Propriété : <a href="">daen:maintainer</a> ### {#property-maintainer}

Problème : supprimer cette propriété car elle n'est pas nécessaire (voir les signatures) ?

**URI :** `http://www.w3.org/ns/solid/daen#maintainer`

Le [[spec-overview#maintainer|responsable]] qui maintient la ressource [[spec-overview#artefact-lifecycle-event-log|Journal d'événements du cycle de vie de l'artefact]].

: Sous-propriété de :
:: 
: Domaine :
:: <a href="">daen:ArtefactLifecycleEventLog</a>
: Plage :
:: <a href="">daen:Maintainer</a> | <a href="">daen:ServiceHub</a>

### Propriété: <a href="">daen:executor</a> ### {#property-executor}

**URI :** `http://www.w3.org/ns/solid/daen#executor`

Le [[spec-overview#maintainer|responsable]] ou le [[spec-overview#service-hub|hub de service]] qui a exécuté l'événement.

: Sous-propriété de :
:: <a href="https://www.w3.org/TR/prov-o/#wasAssociatedWith">prov:wasAssociatedWith</a>
: Domaine :
:: <a href="">daen:LifecycleEvent</a>
: Plage :
:: <a href="">daen:Maintainer</a> | <a href="">daen:ServiceHub</a>

### Propriétés externes

#### Propriété: <a href="http://www.w3.org/ns/ldp#contains">ldp:contains</a> #### {#property-contains}

**URI :** `http://www.w3.org/ns/ldp#contains`

Le [[spec-overview#lifecycle-event|événement du cycle de vie]] contenu dans ce [[spec-overview#artefact-lifecycle-event-log|Journal d'événements du cycle de vie de l'artefact]].

: Sous-propriété de :
:: 
: Domaine :
:: <a href="">daen:ArtefactLifecycleEventLog</a>
: Plage :
:: <a href="">daen:LifecycleEvent</a>

#### Propriété: <a href="http://www.w3.org/ns/prov#generated">prov:generated</a> #### {#property-generated}

**URI :** `http://www.w3.org/ns/prov#generated`

Un [[spec-overview#artefact|artefact]] secondaire qui a résulté de cet [[spec-overview#lifecycle-event|événement du cycle de vie]].

: Sous-propriété de :
:: 
: Domaine :
:: <a href="">daen:LifecycleEvent</a>
: Plage :
:: <a href="">daen:Artefact</a>

#### Propriété: <a href="http://www.w3.org/ns/prov#startedAtTime">prov:startedAtTime</a> #### {#property-startedattime}

**URI:** `http://www.w3.org/ns/prov#startedAtTime`

Le moment où l'[[spec-overview#lifecycle-event|Événement du cycle de vie]] a commencé.

: Sous-propriété de:
:: 
: Dans le domaine:
:: <a href="">daen:ÉvénementduCycledeVie</a>
: Dans la plage:
:: <a href="http://www.w3.org/2001/XMLSchema#dateTime">xsd:dateTime</a>

#### Propriété: <a href="http://www.w3.org/ns/prov#endedAtTime">prov:endedAtTime</a> #### {#property-endedattime}

**URI:** `http://www.w3.org/ns/prov#endedAtTime`

Le moment où l'[[spec-overview#lifecycle-event|Événement du cycle de vie]] s'est terminé.

: Sous-propriété de:
:: 
: Dans le domaine:
:: <a href="">daen:ÉvénementduCycledeVie</a>
: Dans la plage:
:: <a href="http://www.w3.org/2001/XMLSchema#dateTime">xsd:dateTime</a>

#### Propriété: <a href="http://purl.org/dc/terms/title">dct:title</a> #### {#property-title}

**URI:** `http://purl.org/dc/terms/title`

Le titre de l'[[spec-overview#lifecycle-event|Événement du cycle de vie]].

: Sous-propriété de:
:: 
: Dans le domaine:
:: <a href="">daen:ÉvénementduCycledeVie</a>
: Dans la plage:
:: <a href="http://www.w3.org/2001/XMLSchema#string">xsd:string</a>

#### Propriété: <a href="https://w3id.org/security#signature">sec:signature</a> #### {#property-signature}

**URI:** `https://w3id.org/security#signature`

Le titre de l'[[spec-overview#lifecycle-event|Événement du cycle de vie]].

: Sous-propriété de:
:: 
: Dans le domaine:
:: <a href="">daen:ÉvénementduCycledeVie</a>
: Dans la plage:
:: <a href="https://w3id.org/security#Signature">sec:Signature</a>

#### Propriété: <a href="https://w3id.org/security#creator">sec:creator</a> #### {#property-creator}

**URI:** `https://w3id.org/security#creator`

Le titre de l'[[spec-overview#lifecycle-event|Événement du cycle de vie]].

: Sous-propriété de:
:: 
: Dans le domaine:
:: <a href="">sec:Signature</a>
: Dans la plage:
:: <a href="">daen:Responsable</a> | <a href="">daen:HubdeService</a>

## Signature des événements du cycle de vie

Les événements du cycle de vie qui appartiennent à un seul [=Artefact=] peuvent être produits par différents [=acteurs=] dans le réseau. Bien qu'il soit possible de déduire l'[=acteur=] qui a exécuté l'événement via la propriété [[#property-executor|`daen:executor`]], il est également essentiel de déduire qui atteste de son existence. Cela se fait en signant le [=Lifecycle Event=] sérialisé et en ajoutant le qui, quoi et quand de la signature numérique. Souvent, l'[=acteur=] qui exécute l'événement est le même que celui qui le signe, bien que cela ne soit pas toujours le cas.

Un événement de type [[#type-lifecycle-event|`daen:LifecycleEvent`]] DOIT contenir une propriété [[#property-signature|`sec:signature`]]. La signature DOIT être typée comme l'une des classes de [[security-vocab#classes]] et DOIT être une signature [[linked-data-proof#linked-data-signatures|Linked Data Signature]] valide. Elle DOIT contenir la propriété `sec:creator` avec l'URI de l'[=acteur=] signataire comme valeur.

<pre class=include-code>
chemin : examples/SignedLifecycleEvent.jsonld
mise en évidence: json
afficher: 
</pre>

Découverte d'un journal des événements du cycle de vie d'un Artefact {#discovery}
================================================================================================

Un [=Artefact Lifecycle Event Log=] peut être découvert avec plusieurs méthodes :

1. Les [=acteurs=] émettent une demande vers n'importe quelle ressource pour récupérer l'URL du journal des événements du cycle de vie de l'[=Artefact=] à partir d'un lien ([[#discovery-link]]).
2. Les [=acteurs=] utilisent la description des [[shapetrees]] pour localiser l'URL du journal des événements du cycle de vie de l'[=Artefact=] ([[#discovery-shapetrees]]).

Problème : comment localiser les ressources pouvant conduire à un tel lien ? Qui les héberge ?

Toute ressource [=Artefact=] DOIT prendre en charge la première méthode de découverte. ELLES PEUVENT prendre en charge la méthode supplémentaire basée sur les [[shapetrees]]. Les [=acteurs=] PEUVENT choisir l'ordre dans lequel ils essaient ces méthodes de découverte.

## Découverte via lien ## {#discovery-link}

Un [=acteur=] DOIT essayer au moins l'une des actions suivantes :- effectuer une requête HTTP HEAD ou GET sur l'URL cible, et utiliser l'en-tête `Link` avec une valeur `rel` de `http://www.w3.org/ns/solid/daen#eventLog`.
 - effectuer une requête HTTP GET sur l'URL cible pour récupérer une représentation [[rdf11-primer|RDF 1.1]], dont le graphe RDF encodé contient une relation de type `http://www.w3.org/ns/solid/daen#eventLog`. Le sujet de cette relation est la cible et l'objet est l' [=Artefact Lifecycle Event Log=].
 - effectuer une requête HTTP GET sur l'URL cible pour récupérer une représentation [[html]], dont le corps HTML contient un élément de lien avec une valeur `rel` de `http://www.w3.org/ns/solid/daen#eventLog`. La valeur de l'attribut `href` est l'[=Artefact Lifecycle Event Log=].

Un [=acteur=] peut être effectué dans n'importe quel ordre, mais si l'un ne parvient pas à donner un [=Artefact Lifecycle Event Log=], les alternatives DOIVENT être essayées.
Une ressource PEUT annoncer de multiples ressources [=Artefact Lifecycle Event Log=], par exemple un [=artefact=] facilitant la découverte de son cycle de vie distribué sur le réseau.
Un [=Artefact Lifecycle Event Log=] PEUT être utilisé par de multiples ressources, par exemple en utilisant un seul [=Artefact Lifecycle Event Log=] pour collecter les [=Événements du cycle de vie=] de tous les [=Artefacts=] dans un pod de données.

<div class='example'>
En cas d'une ressource RDF située à `resourceURI`, toute implémentation liant un Journal d'événements situé à `eventLogURI` via un lien dans le corps DOIT ajouter le triple de données suivant au corps du document :

<pre class=include-code>
path: examples/discovery.ttl
highlight: turtle
show:
</pre>
</div>

<div class='example'>
En cas d'une ressource HTML située à `resourceURI`, toute implémentation liant un Journal d'événements situé à `eventLogURI` via un lien dans le corps HTML DOIT utiliser un élément de lien dans le corps HTML comme suit :
<pre class=include-code>
path: examples/discovery.html
highlight: html
show:
</pre>
</div><div class='example'>
Toute ressource avec un journal d'événements lié qui n'annonce pas ce journal d'événements par le biais d'un lien dans le corps du message DOIT annoncer ce journal d'événements par le biais d'un en-tête de lien dans la réponse du serveur comme suit:
``` http
Link: <https://example.org/eventlog>; rel="http://www.w3.org/ns/solid/daen#eventLog".
```
Problème : obtenir plus de détails sur la méthode ci-dessous

Certains formats de données peuvent utiliser une ressource externe pour agréger des métadonnées et/ou servir de point d'entrée pour de multiples ressources.
L'implémenteur PEUT choisir d'agréger les entités [=Artefact Lifecycle Event Log=] annoncées par les ressources agrégées dans la ressource d'agrégation, 
et les annoncer à partir de cette ressource.
Alternativement, l'implémenteur peut choisir d'annoncer une seule instance de [=Artefact Lifecycle Event Log=] à partir de la ressource d'agrégation pour toutes les ressources agrégées.

Toute implémentation PEUT prendre en charge la découverte d'un journal d'événements via une ressource externe.
Dans ce cas, l'acteur DOIT faire une requête HTTP HEAD ou GET sur l'URL cible.
L'acteur doit rechercher dans les en-têtes de réponse un en-tête Link avec une valeur `rel` de `meta` et dans le corps de la réponse un élément de lien avec une valeur `rel` de `meta` dans le cas d'une représentation [[html]],
ou pour un triple de données avec une valeur prédicat de `rdf:seeAlso` en cas de codage [[RDF 1.1]].

<div class='example'>
La ressource d'agrégation située à `aggregationResourceURI` DOIT être liée pour toutes les ressources agrégées via UN LIEN dans le corps de la forme :

``` html
<link rel='meta' href='{aggregationResourceURI}' />
``` 
dans le cas d'une ressource HTML et 

``` turtle
<resourceURI> rdf:seeAlso <aggregationResourceURI> .
``` 
dans le cas d'un encodage RDF OU en utilisant un en-tête `Link` de la forme :

``` http
Link: <aggregationResourceURI>; rel=meta
```
</div>

## Découverte via les Shape Trees ## {#discovery-shapetrees}

Toute implémentation PEUT supporter la découverte d'un [=Artefact Lifecycle Event Log=] à travers les [[shapetrees]] définies dans la plateforme de données.

Dans l'écosystème [[solid-protocol|Solid]], Toutes les ressources [=Artefact Lifecycle Event Log=] créées DOIVENT être découvrables dans le pod de données à travers l'[[shapetrees#tree|Shape Trees]] du pod.
Cela permet aux acteurs du réseau d'agrégér efficacement toutes les données des [=Événements du cycle de vie=] dans le pod de données pour lequel ils ont des autorisations de lecture.

<div class="example">
```
// Le dossier Événements contient des conteneurs de Journal d'événements
<#Events> st:expectsType st:ShapeTreeContainer ;
	st:contains <#EventStream> ; 

// Un Journal d'événements est un conteneur dans l'écosystème Solid contenant des ressources d'événements.
<#EventStream> tree:expectsType st:ShapeTreeContainer ;
	st:contains <#Event> ;
	
// Une ressource d'événement est validée par une forme d'événement de base
<#Event> tree:expectsType st:ShapeTreeResource ;
	st:validatedBy <EventShape> ;

<EventShape> { ... }
```
</div>


Ajout d'événements du cycle de vie {#producing}
===============================================

Un acteur peut ajouter [=Événements du cycle de vie=] en envoyant une demande `POST` au [=Artefact Lifecycle Event Log=].

Dans le cas où l'[autorisation](#authorization) est activée pour le [=Artefact Lifecycle Event Log=], l'acteur DOIT disposer des [autorisations d'ajout](#authorization-append) pour exécuter cette action.

Avant d'ajouter un événement au [=Artefact Lifecycle Event Log=], le client DEVRAIT essayer de découvrir si la [validation](#validation) est activée pour le [=Artefact Lifecycle Event Log=]. Si la validation est activée, le client DEVRAIT essayer de valider d'abord l'événement sur le client avec le lien de validation découvert.

Tout événement qui est posté avec succès et validé DOIT être ajouté au [=Artefact Lifecycle Event Log=].
Les autorisations pour l'événement DEVRAIENT par défaut être héritées des autorisations du [=Artefact Lifecycle Event Log=].

Suite à une demande POST réussie, l'événement DOIT être ajouté sur une URI <em>eventURI</em> et DOIT être défini dans le corps de son [=Artefact Lifecycle Event Log=] avec l'URI <em>eventLogURI</em> en utilisant un triplet RDF de la forme:

```
<eventLogURI> ldp:contains <eventURI> .
```

## Pagination ## {#producing-pagination}

Un [=Artefact Lifecycle Event Log=] PEUT utiliser la pagination.
Tout système de pagination utilisé DOIT garantir que TOUS les événements dans le [=Artefact Lifecycle Event Log=] peuvent être récupérés en suivant les liens <em>next</em> disponibles.
Ces liens DOIVENT être fournis soit en tant qu'en-tête Link de la forme:
```
Link: <nextPageLocation>; rel="next"
```
soit dans le corps du [=Artefact Lifecycle Event Log=] / d'une page récupérée du [=Artefact Lifecycle Event Log=] en tant que triplet de données:
```
<eventLogURI> hydra:next <nextPageLocation> 
```

Toute mise en œuvre PEUT offrir un support de pagination supplémentaire ou des possibilités de filtrage, et DOIT annoncer cela en utilisant les mécanismes appropriés détaillés dans leurs spécifications. 

Consommer un journal des événements du cycle de vie de l'artefact {#consuming}
==============================================================================

Un acteur peut consommer un [=Artefact Lifecycle Event Log=] en envoyant une requête GET.

Lorsque la requête GET réussit sur l'URI du journal des événements `eventLogURI`, l'acteur peut découvrir les URI des événements disponibles en traitant le corps du [=Artefact Lifecycle Event Log=] pour toutes les triplets de données de la forme : 

```
<eventLogURI> ldp:contains <eventURI> .
```
La mise en œuvre du consommateur PEUT inclure des approches alternatives pour récupérer des événements à partir d'un [=Artefact Lifecycle Event Log=], mais DOIT prendre en charge cette méthode de récupération.

## Pagination ## {#consuming-pagination}

Toute mise en œuvre du consommateur DOIT prendre en charge la pagination en suivant les liens <em>suivants</em> annoncés. 
Lors d'une requête GET à un [=Artefact Lifecycle Event Log=] / page [=Artefact Lifecycle Event Log=] sur l'URI `eventLogPageURI` avec un en-tête Accept de type `text/turtle`, le consommateur DOIT traiter la réponse du serveur pour obtenir un en-tête Link avec une valeur rel `"next"`. 
Le corps de la réponse DOIT être traité pour découvrir tous les triplets de données de la forme : 

```
<eventLogPageURI> hydra:next <nextPageLocation> .
```
Toute implémentation PEUT prendre en charge des approches de pagination ou de filtrage annoncées supplémentaires, mais DOIT prendre en charge cette approche pour consommer un [=Artefact Lifecycle Event Log=].

Autorisation {#authorization}
===============================

Toute plateforme mettant en œuvre le mécanisme [=Artefact Lifecycle Event Log=] PEUT prendre en charge l'autorisation pour les aspects suivants du mécanisme [=Artefact Lifecycle Event Log=] :
- Accès en lecture pour un [=Artefact Lifecycle Event Log=]
- Accès en ajout pour un [=Artefact Lifecycle Event Log=]
- Autorisations de mise à jour pour un [=Artefact Lifecycle Event Log=]
- Accès en lecture pour un événement spécifique dans un [=Artefact Lifecycle Event Log=]
- Autorisations de mise à jour pour un événement spécifique dans un [=Artefact Lifecycle Event Log=]

Toute implémentation de l'autorisation pour un [=Artefact Lifecycle Event Log=] DOIT utiliser le [Web Access Control (WAC)](https://www.w3.org/wiki/WebAccessControl). 
La découverte du document ACL pour une ressource DOIT être effectuée conformément à la [spécification ACL](https://www.w3.org/wiki/WebAccessControl).
La définition des autorisations pour une ressource s'effectue en créant / mettant à jour le [fichier ACL](https://www.w3.org/wiki/WebAccessControl) pour cette ressource.

REMARQUE : En fonction de l'évolution du projet Solid, cette dépendance à WAC peut être mise à jour pour inclure de nouvelles approches d'autorisation, dans la mesure où l'objectif est de maintenir la compatibilité avec le projet Solid.

## Autorisation de lecture ## {#authorization-read}
Tout acteur disposant de permissions de lecture définies pour un [=Artefact Lifecycle Event Log=] DOIT être en mesure de découvrir tous les événements dans le [=Artefact Lifecycle Event Log=] pour lesquels l'acteur a des permissions de lecture.
Tout acteur disposant de permissions de lecture définies pour un [=Artefact Lifecycle Event Log=] DEVRAIT automatiquement avoir la permission de lecture pour tous les événements stockés, SAUF si cela est explicitement défini autrement par les événements individuels.
La mise en œuvre PEUT restreindre l'acteur à découvrir les événements dans le [=Artefact Lifecycle Event Log=] pour lesquels l'acteur n'a pas de permissions de lecture.
Tout acteur sans permissions de lecture pour un [=Artefact Lifecycle Event Log=] NE DEVRAIT PAS être en mesure de découvrir l'événement dans le [=Artefact Lifecycle Event Log=], même si l'acteur a des permissions de lecture pour les événements individuels dans le [=Artefact Lifecycle Event Log=].

## Ajout d'autorisation	## {#authorization-append}

Tout acteur disposant de permissions d'ajout définies pour un [=Artefact Lifecycle Event Log=] DOIT être en mesure d'ajouter des événements au [=Artefact Lifecycle Event Log=].

Remarque : La mise en œuvre PEUT décider d'utiliser SOIT acl:Write SOIT acl:Append comme permission pour ajouter des événements au [=Artefact Lifecycle Event Log=], mais la plateforme DOIT prendre en charge l'utilisation des opérations POST sur le [=Artefact Lifecycle Event Log=] pour la permission choisie.

## Mise à jour des autorisations d'autorisation	## {#authorization-permissions}

Tout acteur disposant de permissions de mise à jour définies pour un [=Artefact Lifecycle Event Log=] DOIT être en mesure de modifier les permissions pour tous les acteurs pour le [=Artefact Lifecycle Event Log=].
Tout acteur disposant de permissions de mise à jour définies pour un [=Artefact Lifecycle Event Log=] DOIT être en mesure de modifier les permissions pour tous les événements individuels dans le [=Artefact Lifecycle Event Log=] SAUF si cela est explicitement défini autrement par les événements individuels.## Autorisation de lecture spécifique à un événement ## {#authorization-specific-read}
Tout acteur disposant des autorisations de lecture définies pour un événement DOIT être en mesure de lire cet événement, et de découvrir l'événement dans le [=Artefact Lifecycle Event Log=] dans le cas des autorisations de lecture pour le [=Artefact Lifecycle Event Log=].

## Autorisation spécifique à la mise à jour d'un événement ## {#authorization-specific-update}
Tout acteur disposant des autorisations de mise à jour définies pour un événement DOIT être en mesure de modifier les autorisations pour tous les acteurs pour cet événement.

Validation d'un journal des événements du cycle de vie de l'artefact {#validation}
=============================================================================================

Toute implémentation du mécanisme du [=Artefact Lifecycle Event Log=] PEUT ajouter une prise en charge pour valider les événements qui sont ajoutés au [=Artefact Lifecycle Event Log=].
Dans le cas où un acteur tente d'ajouter un événement au [=Artefact Lifecycle Event Log=] qui ne peut pas être validé, l'événement NE DOIT PAS être ajouté au [=Artefact Lifecycle Event Log=] et un code d'erreur 4xx approprié doit être renvoyé.
Les sections suivantes définissent les différentes possibilités pour fournir un fichier de forme, situé à `shapeFileLocation`, auquel un événement DOIT être validé avant de pouvoir être ajouté au [=Artefact Lifecycle Event Log=].
Si un fichier de forme est annoncé en utilisant l'une des différentes méthodes décrites dans les sections suivantes, le serveur DOIT valider toutes les demandes entrantes pour ajouter un événement au [=Artefact Lifecycle Event Log=] et DOIT rejeter toutes les demandes pour lesquelles l'événement échoue à cette étape de validation.

## En-tête de lien de validation ## {#validation-link-header}

Une requête au [=Artefact Lifecycle Event Log=] PEUT renvoyer l'en-tête de lien suivant :
```
Link: <shapeFileLocation>; rel=http://www.w3.org/ns/ldp#constrainedBy
```
Dans ce cas, le serveur DOIT valider toutes les demandes entrantes pour ajouter un événement au [=Artefact Lifecycle Event Log=] pour le fichier de forme annoncé.


## Validation du lien dans le corps ## {#validation-in-body-link}

Le [=Artefact Lifecycle Event Log=] PEUT fournir les liens suivants dans le corps de la ressource :
```
<link rel='http://www.w3.org/ns/ldp#constrainedBy' href='{shapeFileLocation}'/>
```
dans le cas d'une ressource HTML, et

```
<eventLogURI> <http://www.w3.org/ns/ldp#constrainedBy> <shapeFileLocation>.
```

dans le cas d'une ressource RDF.
Dans ce cas, le serveur DOIT valider toutes les demandes entrantes pour ajouter un événement au [=Artefact Lifecycle Event Log=] pour le fichier de forme annoncé.
http://www.w3.org/ns/ldp#constrainedBy

## Validation de l'arborescence de forme ## {#validation-shape-tree}

Dans un environnement Solide, le fichier de forme pour lequel tous les événements dans le [=Artefact Lifecycle Event Log=] doivent être validés PEUT être annoncé en utilisant un lien st:validatedBy dans le [Shape Tree](https://shapetrees.org/).
Dans ce cas, l'implémentation DEVRAIT également annoncer ce fichier de forme en utilisant soit [un en-tête de lien](#validation-link-header) soit [un lien dans le corps de la réponse](#validation-in-body-link).
<div class="example">
```

// Un Journal des événements du cycle de vie de l'artefact est un conteneur dans l'écosystème Solide contenant des ressources d'événement.
<#EventStream> tree:expectsType st:ShapeTreeContainer ;
	st:contains <#Event> ;
	
// Toutes les ressources d'événement DOIVENT être validées pour le fichier de forme annoncé
<#Event> tree:expectsType st:ShapeTreeResource ;
	st:validatedBy <shapeFileLocation> ;
```
</div>


<pre class=biblio>
{
	"solid-oidc": {
		"authors": [
			"Aaron Coburn (Inrupt)",
			"elf Pavlik",
			"Dmitri Zagidulin"
		],
		"href": "https://solid.github.io/authentication-panel/solid-oidc/",
		"title": "SOLID-OIDC",
		"status": "Brouillon de l'éditeur",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"solid-protocol": {
		"authors": [
			"Sarven Capadisli",
			"Tim Berners-Lee",
			"Ruben Verborgh",
			"Kjetil Kjernsmo",
			"Justin Bingham",
			"Dmitri Zagidulin"
		],
		"href": "https://solidproject.org/TR/protocol",
		"title": "Le protocole Solid",
		"status": "Brouillon de l'éditeur",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"spec-overview": {
		"authors": [
			"Miel Vander Sande",
			"Patrick Hochstenbach",
			"Ruben Dedecker",
			"Jeroen Werbrouck"
		],
		"href": "http://mellonscholarlycommunication.github.io/spec-overview/",
		"title": "Aperçu des spécifications de ResearcherPod",
		"status": "Brouillon de l'éditeur",
		"publisher": "Projet ResearcherPod"
	},
	"shapetrees": {
		"authors": [
			"Eric Prud'hommeaux",
			"Justin Bingham"
		],
		"href": "https://shapetrees.org/TR/specification/",
		"title": "Spécification des arbres de forme",
		"status": "Brouillon de l'éditeur",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"security-vocab": {
		"authors": [
			"Manu Sporny",
			"Orie Steele",
			"Tobias Looker"
		],
		"href": "https://w3c-ccg.github.io/security-vocab/",
		"title": "Le vocabulaire de sécurité",
		"status": "Rapport de groupe de travail de la communauté en cours de rédaction",
		"publisher": "Groupe de travail sur les attestations du W3C",
		"deliveredBy": [
			"https://w3c-ccg.github.io/"
		]
	},
	"linked-data-proof": {
		"authors": [
			"Manu Sporny",
			"Dave Longley"
		],
		"href": "https://w3c-ccg.github.io/ld-proofs",
		"title": "Preuves de données liées 1.0",
		"status": "Rapport de groupe de travail de la communauté en cours de rédaction","publisher": "Groupe de la communauté des titres de compétence W3C",
		"deliveredBy": [
			"https://w3c-ccg.github.io/"
		]
	}
}
</pre>

# Remerciements

Nous remercions Herbert Van de Sompel, [DANS + Ghent University](https://dans.knaw.nl/nl/), hvdsomp@gmail.com pour sa précieuse contribution à ce projet.